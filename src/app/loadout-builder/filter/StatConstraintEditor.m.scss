@use '../../variables' as *;

.iconStat {
  display: inline-block;
  height: 17px;
  width: 17px;
  background-size: 100%;
  vertical-align: middle;
  margin-right: 2px;
}

.grip {
  opacity: 0.5;
  font-size: 10px;
  margin-right: 4px;
}

.ignored {
  opacity: 0.4;
}

.row {
  display: grid;
  grid-template-columns: 1fr min-content;
  grid-template-areas:
    'name buttons'
    'bar bar';
  gap: 4px 4px;
  margin-bottom: 2px;
  background-color: black;
  align-items: center;
  padding: 4px 4px 4px 0;

  @include phone-portrait {
    grid-template-areas: 'name range minimum maximum';
    grid-template-columns: 1fr min-content 45px 45px;
  }

  > * {
    @include phone-portrait {
      margin-top: 8px;
      margin-bottom: 8px;
    }
    white-space: nowrap;
    &:first-child {
      padding-left: 8px;
    }
  }

  label {
    grid-area: name;
    height: 100%;
    display: flex;
    overflow: hidden;

    > span {
      display: flex;
      flex-direction: row;
      align-items: center;
      white-space: nowrap;
    }
  }

  .statDisplayInfo {
    overflow: hidden;
    .statName {
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  > select {
    height: 18px;
    padding: 0 4px;
    background-position-x: calc(100% - 4px);
    width: 45px;
  }
}

.statBar {
  grid-area: bar;
  composes: flexRow from '../../dim-ui/common.m.scss';
  margin-left: 4px;
  gap: 2px;
}

.statBarSegment {
  composes: flexRow from '../../dim-ui/common.m.scss';
  flex: 1;
  background-color: var(--theme-button-bg);
  color: var(--theme-button-text);
  font-size: 12px;
  height: 24px;

  /* stylelint-disable-next-line no-descending-specificity */
  > * {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
  }

  &:hover {
    outline: 1px solid var(--theme-accent-primary);
  }
}

.maxed {
  background-color: grey;
}

.locked {
  opacity: 0.2;
}

.selectedStatBar {
  background-color: var(--theme-accent-primary);
  color: var(--theme-text-invert);
}

.buttons {
  composes: flexRow from '../../dim-ui/common.m.scss';
}

.rowControl {
  composes: resetButton from '../../dim-ui/common.m.scss';
  padding: 4px 6px;
  opacity: 0.9;

  &:disabled {
    opacity: 0.2;
  }
}
