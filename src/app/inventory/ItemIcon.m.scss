@use '../variables.scss' as *;
@use 'sass:math';

$legendaryBg: #522f65;
$exoticBg: #ceae33;
$basicBg: #c3bcb4;
$rareBg: #5076a3;
$commonBg: #366f42;

// The image within the overall item. Global because it's referenced by other styles.
:global(.item-img) {
  display: block;
  width: var(--item-size);
  height: var(--item-size);
  box-sizing: border-box;
  border: $item-border-width solid var(--theme-item-polaroid);
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
  pointer-events: none;
  &:focus {
    outline: none;
  }

  // Used by vendors
  &:global(.transparent) {
    border-color: transparent;
  }
}

.legendary {
  background-color: $legendaryBg;
}
.exotic {
  background-color: $exoticBg;
}
.basic {
  background-color: $basicBg;
}
.rare {
  background-color: $rareBg;
}
.common {
  background-color: $commonBg;
}

// Alternate border styles
.masterwork {
  border-color: var(--theme-item-polaroid-masterwork);
}
.deepsight {
  border-color: $deepsight-border-color;
}

// Completed items or capped stackables image
.complete {
  border-color: var(--theme-item-polaroid-capped);
}

// Engrams and packages
.borderless {
  border-color: transparent;
}

// Masterwork pattern emulating .src/images/masterwork.png
.backgroundOverlay {
  position: absolute;
  box-sizing: border-box;
  height: calc(var(--item-size) - ($item-border-width * 2));
  width: calc(var(--item-size) - ($item-border-width * 2));
  top: $item-border-width;
  left: $item-border-width;
}
.legendaryMasterwork {
  box-shadow: inset 0 0 2px 1px rgba(0, 0, 0, 0.25);
  background:
    radial-gradient(ellipse at center bottom, rgba(255, 255, 255, 0.2), transparent 75%) center
      bottom,
    radial-gradient(ellipse at center bottom, rgba(255, 255, 255, 0.1), transparent 75%) center
      bottom;
  background-size:
    125% 30%,
    50% 50%;
  background-repeat: no-repeat, no-repeat;
}

// Exotic Masterwork pattern emulating .src/images/exotic-masterwork.png
.exoticMasterwork {
  $light-stripe: rgba(255, 255, 255, 0.003);
  $dark-stripe: rgba(0, 0, 0, 0.025);
  box-shadow: inset 0 0 2px 1px rgba(0, 0, 0, 0.25);
  background:
    linear-gradient(rgba(0, 0, 0, 0.3) 0%, transparent 20%),
    linear-gradient(
      transparent 50%,
      rgba(255, 255, 255, 0.225) 65%,
      rgba(255, 255, 255, 0.225) 100%
    ),
    repeating-linear-gradient(
        to bottom right,
        #{$light-stripe} 0%,
        #{$light-stripe} 5%,
        #{$dark-stripe} 5%,
        #{$dark-stripe} 12.5%
      )
      bottom right,
    repeating-linear-gradient(
        to bottom left,
        #{$light-stripe} 0%,
        #{$light-stripe} 5%,
        #{$dark-stripe} 5%,
        #{$dark-stripe} 12.5%
      )
      bottom left,
    repeating-linear-gradient(
        to top left,
        #{$light-stripe} 0%,
        #{$light-stripe} 5%,
        #{$dark-stripe} 5%,
        #{$dark-stripe} 12.5%
      )
      top left,
    repeating-linear-gradient(
        to top right,
        #{$light-stripe} 0%,
        #{$light-stripe} 5%,
        #{$dark-stripe} 5%,
        #{$dark-stripe} 12.5%
      )
      top right;
  background-repeat: no-repeat;
  background-size:
    100%,
    100%,
    50% 50%,
    50% 50%,
    50% 50%,
    50% 50%;
}
.deepsightBorder {
  border: 2px solid $deepsight-border-color;

  &.legendaryMasterwork {
    background-image: url('../../images/masterwork.png');
  }
}

.iconOverlay {
  top: $item-border-width;
  left: $item-border-width;
  height: calc(var(--item-size) - #{2 * $item-border-width});
  width: calc(var(--item-size) - #{2 * $item-border-width});
  background-size: contain;
  position: absolute;
  pointer-events: none;
}

.energyCostOverlay {
  position: absolute;
  inset: $item-border-width $item-border-width $item-border-width $item-border-width;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  pointer-events: none;
}

.energyCost {
  position: absolute;
  inset: $item-border-width $item-border-width $item-border-width $item-border-width;
  pointer-events: none;

  > text {
    fill: white;
  }
}

.highlightedObjective {
  position: absolute;
  display: block;
  width: calc((var(--item-size) + 1px) / 2) !important;
  height: calc((var(--item-size) + 1px) / 2) !important;
  right: 0;
  top: calc(var(--item-size) - ((var(--item-size) + 1px) / 2) - 1px);
  // Seems to fix https://github.com/DestinyItemManager/DIM/issues/7974
  pointer-events: none;
}

.inverted {
  border-color: #222;
}

.strandColorFix {
  filter: hue-rotate(211deg) brightness(1.5);
}
